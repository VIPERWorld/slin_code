<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <!-- make sure to set 'Copy To Output Directory' option for this file -->
  <!-- go to http://nlog-project.org/wiki/Configuration_file for more information -->
  
    <!--配置日志输出路径和输出日志的布局-->
    <!--
        name：目标的名称
        xsi:type：输出类型，File，Database，Console等
        fileName：输出路径
        layout：输出内容的布局（格式）
    -->
    <targets async="true">
        <!--进行异步处理-->
        <target name="n" xsi:type="AsyncWrapper">
            <target name="file" xsi:type="File" fileName="${basedir}/Log/log${date:format=yyyy-MM-dd}.txt"
              layout="[${date:format=yyyy-MM-dd HH\:mm\:ss}][${callsite}][${level}] ${message} ${exception} ${machinename}" />
        </target>
    </targets>

    <!--配置日志进行路由的规则-->
    <!--
        name - 日志源/记录者的名字 (即程序集的名称，允许使用通配符*) 
        minlevel - 该规则所匹配日志范围的最低级别 
        maxlevel - 该规则所匹配日志范围的最高级别 
        level - 该规则所匹配的单一日志级别 
        levels - 该规则所匹配的一系列日志级别，由逗号分隔。 
        writeTo - 规则匹配时日志应该被写入的一系列目标（即target中的name属性值），由逗号分隔。 
        final - 标记当前规则为最后一个规则。其后的规则即时匹配也不会被运行。
        
        等级从低到高依次为：Trace|Debug|Info|Warn|Error|Fatal 决定内部日志的级别，级别越高，输出的日志信息越简洁。 
     -->
    <rules>
        <logger name="*" minlevel="Trace" writeTo="file" />
    </rules>
</nlog>
